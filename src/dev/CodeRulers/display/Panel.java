/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dev.CodeRulers.display;

import dev.CodeRulers.game.CodeRulers;
import dev.CodeRulers.ruler.AbstractRuler;
import dev.CodeRulers.util.IMAGE;
import dev.CodeRulers.world.World;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import javax.swing.Timer;

/**
 *
 * @author seanz
 */
public class Panel extends javax.swing.JPanel {

    CodeRulers r;
    BufferedImage sidePanelImage;
    Timer t;

    /**
     * Creates new form Panel
     */
    public Panel(CodeRulers r) {
        initComponents();
        this.r = r;
        this.setSize(768, 1024);
        Timer t = new Timer(5,new TimerListener());
        t.start();
    }

    public void tick() {
        for (AbstractRuler ruler : r.getRulerArray()) {
            ruler.orderSubjects();
        }
    }

    @Override
    public void paintComponent(Graphics g) {
        int sidePanelWidth = 256;
        int panelWidth = 1024;
        int panelHeight = 768;

        super.paintComponent(g);
        
        
        World.render(g);
        if(sidePanelImage==null) {
            sidePanelImage = IMAGE.getResizedImage(IMAGE.getBlurredImage(IMAGE.getBufferedImage("src/resources/images/sidePanelImage.jpg"), 20), sidePanelWidth, panelHeight);
        } 
        
        g.drawImage(sidePanelImage,panelWidth-sidePanelWidth,0,null);
        
        int count=0;
        //render all the player GUI
        for (AbstractRuler ruler : r.getRulerArray()) {
            int yCoord=count * panelHeight / 12 + ((count+1) * 40);
            int xCoord=panelWidth-sidePanelWidth;
            
            g.setColor(ruler.getColor());

            g.fillRect(xCoord,yCoord,sidePanelWidth, panelHeight / 12);

            g.drawImage(IMAGE.getResizedImage(ruler.getProfileImage(),
                    panelHeight / 12 - 12, panelHeight / 12 - 12), 
                    xCoord+6,yCoord+6,null);
            
            Font f = new Font("Myriad", Font.BOLD, 16);
            g.setFont(f);
            
            g.setColor(Color.BLACK);
            

            g.getFontMetrics(f).getHeight();
            
            g.drawString(ruler.getRulerName(),xCoord+panelHeight/12 ,yCoord+g.getFontMetrics(f).getHeight());
            
            
            ruler.getPoints();
            
            World.getLandCount(ruler.getRulerID());
            
            count++;
            
            
        }

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setPreferredSize(new java.awt.Dimension(1024, 768));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    private class TimerListener implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            repaint();

        }

    }

}
